/*
J2X -- Transliterate Japanese words in kana(hiragana or katakana) into other writing systems
------------------------------
Arabic
------------------------------
Script: Arabic letters
Language: Arabic

Note: version for Persian should be made, which uses additional letters in Persian like 'pe' or 'chim'.

*/

@:expose
@:keep
class J2x_ar extends J2x_lang{
	static var arKana = [];

/*	
	private static function u(c:Int){
		return J2x_lang.u(c);
	}
*/

	static inline function u(c:Int){
		return String.fromCharCode(c);
	}
	
	public static function init(){
		if(arKana.length != 0) return;
		arKana.push(u(0x622));	arKana.push(u(0x625)+u(0x64A));	arKana.push(u(0x623)+u(0x648));	arKana.push(u(0x625)+u(0x64A));	arKana.push(u(0x623)+u(0x648));	arKana.push(u(0x64A)+u(0x627));	arKana.push(u(0x64A)+u(0x648));	arKana.push(u(0x64A)+u(0x64A));	arKana.push(u(0x64A)+u(0x648));
								
		arKana.push(u(0x643)+u(0x627));	arKana.push(u(0x643)+u(0x64A));	arKana.push(u(0x643)+u(0x648));	arKana.push(u(0x643)+u(0x64A));	arKana.push(u(0x643)+u(0x648));	arKana.push(u(0x643)+u(0x64A)+u(0x627));	arKana.push(u(0x643)+u(0x64A)+u(0x648));	arKana.push(u(0x643)+u(0x64A)+u(0x64A));	arKana.push(u(0x643)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x63A)+u(0x627));	arKana.push(u(0x63A)+u(0x64A));	arKana.push(u(0x63A)+u(0x648));	arKana.push(u(0x63A)+u(0x64A));	arKana.push(u(0x63A)+u(0x648));	arKana.push(u(0x63A)+u(0x64A)+u(0x627));	arKana.push(u(0x63A)+u(0x64A)+u(0x648));	arKana.push(u(0x63A)+u(0x64A)+u(0x64A));	arKana.push(u(0x63A)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x633)+u(0x627));	arKana.push(u(0x633)+u(0x64A));	arKana.push(u(0x633)+u(0x648));	arKana.push(u(0x633)+u(0x64A));	arKana.push(u(0x633)+u(0x648));	arKana.push(u(0x633)+u(0x64A)+u(0x627));	arKana.push(u(0x633)+u(0x64A)+u(0x648));	arKana.push(u(0x633)+u(0x64A)+u(0x64A));	arKana.push(u(0x633)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x634)+u(0x627));	arKana.push(u(0x634)+u(0x64A));	arKana.push(u(0x634)+u(0x648));	arKana.push(u(0x634)+u(0x64A));	arKana.push(u(0x634)+u(0x648));	arKana.push(u(0x634)+u(0x627));	arKana.push(u(0x634)+u(0x648));	arKana.push(u(0x634)+u(0x64A));	arKana.push(u(0x634)+u(0x648));
								
		arKana.push(u(0x632)+u(0x627));	arKana.push(u(0x632)+u(0x64A));	arKana.push(u(0x632)+u(0x648));	arKana.push(u(0x632)+u(0x64A));	arKana.push(u(0x632)+u(0x648));	arKana.push(u(0x632)+u(0x64A)+u(0x627));	arKana.push(u(0x632)+u(0x64A)+u(0x648));	arKana.push(u(0x632)+u(0x64A)+u(0x64A));	arKana.push(u(0x632)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x62C)+u(0x627));	arKana.push(u(0x62C)+u(0x64A));	arKana.push(u(0x62C)+u(0x648));	arKana.push(u(0x62C)+u(0x64A));	arKana.push(u(0x62C)+u(0x648));	arKana.push(u(0x62C)+u(0x627));	arKana.push(u(0x62C)+u(0x648));	arKana.push(u(0x62C)+u(0x64A));	arKana.push(u(0x62C)+u(0x648));
								
		arKana.push(u(0x62A)+u(0x627));	arKana.push(u(0x62A)+u(0x64A));	arKana.push(u(0x62A)+u(0x648));	arKana.push(u(0x62A)+u(0x64A));	arKana.push(u(0x62A)+u(0x648));	arKana.push(u(0x62A)+u(0x64A)+u(0x627));	arKana.push(u(0x62A)+u(0x64A)+u(0x648));	arKana.push(u(0x62A)+u(0x64A)+u(0x64A));	arKana.push(u(0x62A)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x62A)+u(0x634)+u(0x627));	arKana.push(u(0x62A)+u(0x634)+u(0x64A));	arKana.push(u(0x62A)+u(0x634)+u(0x648));	arKana.push(u(0x62A)+u(0x634)+u(0x64A));	arKana.push(u(0x62A)+u(0x634)+u(0x648));	arKana.push(u(0x62A)+u(0x634)+u(0x627));	arKana.push(u(0x62A)+u(0x634)+u(0x648));	arKana.push(u(0x62A)+u(0x634)+u(0x64A));	arKana.push(u(0x62A)+u(0x634)+u(0x648));
								
		arKana.push(u(0x62A)+u(0x633)+u(0x627));	arKana.push(u(0x62A)+u(0x633)+u(0x64A));	arKana.push(u(0x62A)+u(0x633)+u(0x648));	arKana.push(u(0x62A)+u(0x633)+u(0x64A));	arKana.push(u(0x62A)+u(0x633)+u(0x648));	arKana.push(u(0x62A)+u(0x633)+u(0x64A)+u(0x627));	arKana.push(u(0x62A)+u(0x633)+u(0x64A)+u(0x648));	arKana.push(u(0x62A)+u(0x633)+u(0x64A)+u(0x64A));	arKana.push(u(0x62A)+u(0x633)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x62F)+u(0x627));	arKana.push(u(0x62F)+u(0x64A));	arKana.push(u(0x62F)+u(0x648));	arKana.push(u(0x62F)+u(0x64A));	arKana.push(u(0x62F)+u(0x648));	arKana.push(u(0x62F)+u(0x64A)+u(0x627));	arKana.push(u(0x62F)+u(0x64A)+u(0x648));	arKana.push(u(0x62F)+u(0x64A)+u(0x64A));	arKana.push(u(0x62F)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x646)+u(0x627));	arKana.push(u(0x646)+u(0x64A));	arKana.push(u(0x646)+u(0x648));	arKana.push(u(0x646)+u(0x64A)+u(0x64A));	arKana.push(u(0x646)+u(0x648));	arKana.push(u(0x646)+u(0x64A)+u(0x627));	arKana.push(u(0x646)+u(0x64A)+u(0x648));	arKana.push(u(0x646)+u(0x64A)+u(0x64A));	arKana.push(u(0x646)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x647)+u(0x627));	arKana.push(u(0x647)+u(0x64A));	arKana.push(u(0x647)+u(0x648));	arKana.push(u(0x647)+u(0x64A));	arKana.push(u(0x647)+u(0x648));	arKana.push(u(0x647)+u(0x64A)+u(0x627));	arKana.push(u(0x647)+u(0x64A)+u(0x648));	arKana.push(u(0x647)+u(0x64A)+u(0x64A));	arKana.push(u(0x647)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x641)+u(0x627));	arKana.push(u(0x641)+u(0x64A));	arKana.push(u(0x641)+u(0x648));	arKana.push(u(0x641)+u(0x64A));	arKana.push(u(0x641)+u(0x648));	arKana.push(u(0x641)+u(0x64A)+u(0x627));	arKana.push(u(0x641)+u(0x64A)+u(0x648));	arKana.push(u(0x641)+u(0x64A)+u(0x64A));	arKana.push(u(0x641)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x628)+u(0x627));	arKana.push(u(0x628)+u(0x64A));	arKana.push(u(0x628)+u(0x648));	arKana.push(u(0x628)+u(0x64A));	arKana.push(u(0x628)+u(0x648));	arKana.push(u(0x628)+u(0x64A)+u(0x627));	arKana.push(u(0x628)+u(0x64A)+u(0x648));	arKana.push(u(0x628)+u(0x64A)+u(0x64A));	arKana.push(u(0x628)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x6A4)+u(0x627));	arKana.push(u(0x6A4)+u(0x64A));	arKana.push(u(0x6A4)+u(0x648));	arKana.push(u(0x6A4)+u(0x64A));	arKana.push(u(0x6A4));	arKana.push(u(0x6A4)+u(0x64A)+u(0x627));	arKana.push(u(0x6A4)+u(0x64A)+u(0x648));	arKana.push(u(0x6A4)+u(0x64A)+u(0x64A));	arKana.push(u(0x6A4)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x628)+u(0x627));	arKana.push(u(0x628)+u(0x64A));	arKana.push(u(0x628)+u(0x648));	arKana.push(u(0x628)+u(0x64A));	arKana.push(u(0x628)+u(0x648));	arKana.push(u(0x628)+u(0x64A)+u(0x627));	arKana.push(u(0x628)+u(0x64A)+u(0x648));	arKana.push(u(0x628)+u(0x64A)+u(0x64A));	arKana.push(u(0x628)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x645)+u(0x627));	arKana.push(u(0x645)+u(0x64A));	arKana.push(u(0x645)+u(0x648));	arKana.push(u(0x645)+u(0x64A));	arKana.push(u(0x645)+u(0x648));	arKana.push(u(0x645)+u(0x64A)+u(0x627));	arKana.push(u(0x645)+u(0x64A)+u(0x648));	arKana.push(u(0x645)+u(0x64A)+u(0x64A));	arKana.push(u(0x645)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x64A)+u(0x627));	arKana.push(u(0x64A)+u(0x64A));	arKana.push(u(0x64A)+u(0x648));	arKana.push(u(0x64A)+u(0x64A));	arKana.push(u(0x64A)+u(0x648));	arKana.push(u(0x64A)+u(0x627));	arKana.push(u(0x64A)+u(0x648));	arKana.push(u(0x64A)+u(0x64A));	arKana.push(u(0x64A)+u(0x648));
								
		arKana.push(u(0x631)+u(0x627));	arKana.push(u(0x631)+u(0x64A));	arKana.push(u(0x631)+u(0x648));	arKana.push(u(0x631)+u(0x64A));	arKana.push(u(0x631)+u(0x648));	arKana.push(u(0x631)+u(0x64A)+u(0x627));	arKana.push(u(0x631)+u(0x64A)+u(0x648));	arKana.push(u(0x631)+u(0x64A)+u(0x64A));	arKana.push(u(0x631)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x648)+u(0x627));	arKana.push(u(0x648)+u(0x64A));	arKana.push(u(0x648)+u(0x648));	arKana.push(u(0x648)+u(0x64A));	arKana.push(u(0x648)+u(0x648));	arKana.push(u(0x648)+u(0x64A)+u(0x627));	arKana.push(u(0x648)+u(0x64A)+u(0x648));	arKana.push(u(0x648)+u(0x64A)+u(0x64A));	arKana.push(u(0x648)+u(0x64A)+u(0x648));
								
		arKana.push(u(0x646));	arKana.push(u(0x643)+u(0x648)+u(0x627));	arKana.push(u(0x643)+u(0x648)+u(0x64A));	arKana.push(u(0x643)+u(0x648)+u(0x64A));	arKana.push(u(0x643)+u(0x648)+u(0x648));	arKana.push(u(0x63A)+u(0x648)+u(0x627));	arKana.push(u(0x63A)+u(0x648)+u(0x64A));	arKana.push(u(0x63A)+u(0x648)+u(0x64A));	arKana.push(u(0x63A)+u(0x648)+u(0x648));

		//arKana.push(u());
	}
	
	public static function phon2x(sPhonArray:Array<String>){
		init();
		var ret = "";
		var alt = [u(0x622), u(0x626)+u(0x64A), u(0x624)+u(0x648), u(0x626)+u(0x64A), u(0x624)+u(0x648)];
				
		for(syl in sPhonArray){
			var idx = J2x_lang.phonKana.indexOf(syl);
			if(idx != -1){
				if( (idx >= 1 && idx <= 4) && ret.length != 0 && ret.charAt(ret.length - 1) != " "){
					// If not word head, hamza becomes alternative form
					ret += alt[idx];
				}else{
					ret += arKana[idx];
				}
			}else{
				var s = syl.charAt(0);
				if(s == "%"){
					ret += syl.substring(1, syl.length);
				}else if(s != "#"){
					// small 'tsu' etc. is ignored...
					ret += syl;
				}
			}
		}
		// replace original spelling like Tokyo (spelt with 'emphatic T')
		var ar = ret.split(" ");
		var ar2 = [];
		for(s in ar){
			//Tokyo
			if(
				s == u(0x62A)+u(0x648)+u(0x624)+u(0x648)+u(0x643)+u(0x64A)+u(0x648)+u(0x624)+u(0x648)
				|| s == u(0x62A)+u(0x648)+u(0x643)+u(0x64A)+u(0x648)
			){
				ar2.push(u(0x637)+u(0x648)+u(0x643)+u(0x64A)+u(0x648));
			}else{
				ar2.push(s);
			}
		}
		return ar2.join(" ");
	}
		
}